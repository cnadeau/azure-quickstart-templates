{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "sshPublicKey": {
      "type": "securestring",
      "metadata": {
        "description": "SSH public key for the Virtual Machines."
      }
    },
    "masterVMSize": {
      "type": "string",
      "defaultValue": "Standard_A0",
      "allowedValues": [
        "Standard_A0", "Standard_A1", "Standard_A2", "Standard_A3", "Standard_A4", "Standard_A5",
        "Standard_A6", "Standard_A7", "Standard_A8", "Standard_A9", "Standard_A10", "Standard_A11",
        "Standard_D1", "Standard_D2", "Standard_D3", "Standard_D4",
        "Standard_D11", "Standard_D12", "Standard_D13", "Standard_D14",
        "Standard_D1_v2", "Standard_D2_v2", "Standard_D3_v2", "Standard_D4_v2", "Standard_D5_v2",
        "Standard_D11_v2", "Standard_D12_v2", "Standard_D13_v2", "Standard_D14_v2",
        "Standard_G1", "Standard_G2", "Standard_G3", "Standard_G4", "Standard_G5",
        "Standard_DS1", "Standard_DS2", "Standard_DS3", "Standard_DS4",
        "Standard_DS11", "Standard_DS12", "Standard_DS13", "Standard_DS14",
        "Standard_GS1", "Standard_GS2", "Standard_GS3", "Standard_GS4", "Standard_GS5"
      ],
      "metadata": {
        "description": "The size of the Swarm master Virtual Machine."
      }
    },
    "masterCount": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "Number of Swarm masters in the cluster."
      }
    },
    "nodeVMSize": {
      "type": "string",
      "defaultValue": "Standard_A0",
      "allowedValues": [
        "Standard_A0", "Standard_A1", "Standard_A2", "Standard_A3", "Standard_A4", "Standard_A5",
        "Standard_A6", "Standard_A7", "Standard_A8", "Standard_A9", "Standard_A10", "Standard_A11",
        "Standard_D1", "Standard_D2", "Standard_D3", "Standard_D4",
        "Standard_D11", "Standard_D12", "Standard_D13", "Standard_D14",
        "Standard_D1_v2", "Standard_D2_v2", "Standard_D3_v2", "Standard_D4_v2", "Standard_D5_v2",
        "Standard_D11_v2", "Standard_D12_v2", "Standard_D13_v2", "Standard_D14_v2",
        "Standard_G1", "Standard_G2", "Standard_G3", "Standard_G4", "Standard_G5",
        "Standard_DS1", "Standard_DS2", "Standard_DS3", "Standard_DS4",
        "Standard_DS11", "Standard_DS12", "Standard_DS13", "Standard_DS14",
        "Standard_GS1", "Standard_GS2", "Standard_GS3", "Standard_GS4", "Standard_GS5"
      ],
      "metadata": {
        "description": "The size of the Swarm workers Virtual Machine."
      }
    },
    "nodeCount": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "Number of Swarm worker nodes in the cluster."
      }
    }
  },
  "variables": {
    "masterCount": "[parameters('masterCount')]",
    "adminUsername": "azureuser",
    "vmNameMaster": "swarm-master-",
    "vmNameNode": "swarm-node-",
    "vmSizeMaster": "[parameters('masterVMSize')]",
    "vmSizeNode": "[parameters('nodeVMSize')]",
    "availabilitySetMasters": "swarm-masters-set",
    "availabilitySetNodes": "swarm-nodes-set",
    "osImagePublisher": "Canonical",
    "osImageOffer": "UbuntuServer",
    "osImageSKU": "14.04.3-LTS",
    "osImageVersion": "latest",
    "managementPublicIPAddrName": "swarm-lb-masters-ip",
    "nodesPublicIPAddrName": "swarm-lb-nodes-ip",
    "virtualNetworkName": "swarm-vnet",
    "subnetNameMasters": "subnet-masters",
    "subnetNameNodes": "subnet-nodes",
    "addressPrefixMasters": "172.16.0.0/16",
    "addressPrefixNodes": "10.0.0.0/16",
    "subnetPrefixMasters": "172.16.0.0/24",
    "subnetPrefixNodes": "10.0.0.0/24",
    "subnetRefMaster": "[concat(resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName')),'/subnets/',variables('subnetNameMasters'))]",
    "subnetRefNodes": "[concat(resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName')),'/subnets/',variables('subnetNameNodes'))]",
    "mastersNsgName": "swarm-masters-firewall",
    "nodesNsgName": "swarm-nodes-firewall",
    "mastersNsgID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('mastersNsgName'))]",
    "nodesNsgID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nodesNsgName'))]",
    "newStorageAccountName": "[uniqueString(resourceGroup().id, deployment().name)]",
    "clusterFqdn": "[concat('swarm-',uniqueString(resourceGroup().id, deployment().name))]",
    "storageAccountType": "Standard_LRS",
    "vhdBlobContainer": "vhds",
    "mastersLbName": "swarm-lb-masters",
    "mastersLbID": "[resourceId('Microsoft.Network/loadBalancers',variables('mastersLbName'))]",
    "mastersLbIPConfigName": "MastersLBFrontEnd",
    "mastersLbIPConfigID": "[concat(variables('mastersLbID'),'/frontendIPConfigurations/', variables('mastersLbIPConfigName'))]",
    "mastersLbBackendPoolName": "swarm-masters-pool",
    "nodesLbName": "swarm-lb-nodes",
    "nodesLbID": "[resourceId('Microsoft.Network/loadBalancers',variables('nodesLbName'))]",
    "nodesLbBackendPoolName": "swarm-nodes-pool",
    "sshKeyPath": "[concat('/home/', variables('adminUsername'), '/.ssh/authorized_keys')]",
    "consulServerArgs": [
      "-advertise 172.16.0.4 -bootstrap-expect 1"
    ]
  },
  "resources": [{
    "type": "Microsoft.Storage/storageAccounts",
    "name": "[variables('newStorageAccountName')]",
    "apiVersion": "2015-06-15",
    "location": "[resourceGroup().location]",
    "properties": {
      "accountType": "[variables('storageAccountType')]"
    }
  }, {
    "type": "Microsoft.Compute/availabilitySets",
    "name": "[variables('availabilitySetMasters')]",
    "apiVersion": "2015-06-15",
    "location": "[resourceGroup().location]",
    "properties": {}
  }, {
    "type": "Microsoft.Compute/availabilitySets",
    "name": "[variables('availabilitySetNodes')]",
    "apiVersion": "2015-06-15",
    "location": "[resourceGroup().location]",
    "properties": {}
  }, {
    "apiVersion": "2015-06-15",
    "type": "Microsoft.Network/publicIPAddresses",
    "name": "[variables('managementPublicIPAddrName')]",
    "location": "[resourceGroup().location]",
    "properties": {
      "publicIPAllocationMethod": "Dynamic",
      "dnsSettings": {
        "domainNameLabel": "[concat(variables('clusterFqdn'), '-manage')]"
      }
    }
  }, {
    "apiVersion": "2015-06-15",
    "type": "Microsoft.Network/publicIPAddresses",
    "name": "[variables('nodesPublicIPAddrName')]",
    "location": "[resourceGroup().location]",
    "properties": {
      "publicIPAllocationMethod": "Dynamic",
      "dnsSettings": {
        "domainNameLabel": "[variables('clusterFqdn')]"
      }
    }
  }, {
    "apiVersion": "2015-06-15",
    "type": "Microsoft.Network/virtualNetworks",
    "name": "[variables('virtualNetworkName')]",
    "location": "[resourceGroup().location]",
    "dependsOn": [
      "[variables('mastersNsgID')]",
      "[variables('nodesNsgID')]"
    ],
    "properties": {
      "addressSpace": {
        "addressPrefixes": [
          "[variables('addressPrefixMasters')]",
          "[variables('addressPrefixNodes')]"
        ]
      },
      "subnets": [{
        "name": "[variables('subnetNameMasters')]",
        "properties": {
          "addressPrefix": "[variables('subnetPrefixMasters')]",
          "networkSecurityGroup": {
            "id": "[variables('mastersNsgID')]"
          }
        }
      }, {
        "name": "[variables('subnetNameNodes')]",
        "properties": {
          "addressPrefix": "[variables('subnetPrefixNodes')]",
          "networkSecurityGroup": {
            "id": "[variables('nodesNsgID')]"
          }
        }
      }]
    }
  }, {
    "apiVersion": "2015-06-15",
    "type": "Microsoft.Network/networkSecurityGroups",
    "name": "[variables('mastersNsgName')]",
    "location": "[resourceGroup().location]",
    "properties": {
      "securityRules": [{
        "name": "ssh",
        "properties": {
          "description": "",
          "protocol": "Tcp",
          "sourcePortRange": "*",
          "destinationPortRange": "22",
          "sourceAddressPrefix": "*",
          "destinationAddressPrefix": "*",
          "access": "Allow",
          "priority": 1000,
          "direction": "Inbound"
        }
      }]
    }
  }, {
    "apiVersion": "2015-06-15",
    "type": "Microsoft.Network/networkSecurityGroups",
    "name": "[variables('nodesNsgName')]",
    "location": "[resourceGroup().location]",
    "properties": {
      "securityRules": [{
        "name": "AllowAny",
        "properties": {
          "description": "Swarm node ports need to be configured on the load balancer to be reachable",
          "protocol": "*",
          "sourcePortRange": "*",
          "destinationPortRange": "*",
          "sourceAddressPrefix": "*",
          "destinationAddressPrefix": "*",
          "access": "Allow",
          "priority": 1000,
          "direction": "Inbound"
        }
      }]
    }
  }, {
    "apiVersion": "2015-06-15",
    "type": "Microsoft.Network/networkInterfaces",
    "name": "[concat(variables('vmNameMaster'), copyIndex(), '-nic')]",
    "location": "[resourceGroup().location]",
    "copy": {
      "name": "nicLoopMaster",
      "count": "[variables('masterCount')]"
    },
    "dependsOn": [
      "[concat('Microsoft.Network/loadBalancers/', variables('mastersLbName'))]",
      "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
      "[concat('Microsoft.Network/loadBalancers/', variables('mastersLbName'), '/inboundNatRules/',  'SSH-', variables('vmNameMaster'), copyIndex())]"
    ],
    "properties": {
      "ipConfigurations": [{
        "name": "ipConfigMaster",
        "properties": {
          "privateIPAllocationMethod": "Static",
          "privateIPAddress": "[concat('172.16.0.', copyIndex(4))]",
          "subnet": {
            "id": "[variables('subnetRefMaster')]"
          },
          "loadBalancerBackendAddressPools": [{
            "id": "[concat(variables('mastersLbID'), '/backendAddressPools/', variables('mastersLbBackendPoolName'))]"
          }],
          "loadBalancerInboundNatRules": [{
            "id": "[concat(variables('mastersLbID'),'/inboundNatRules/SSH-',variables('vmNameMaster'),copyindex())]"
          }]
        }
      }]
    }
  }, {
    "apiVersion": "2015-06-15",
    "name": "[variables('mastersLbName')]",
    "type": "Microsoft.Network/loadBalancers",
    "location": "[resourceGroup().location]",
    "dependsOn": [
      "[concat('Microsoft.Network/publicIPAddresses/', variables('managementPublicIPAddrName'))]"
    ],
    "properties": {
      "frontendIPConfigurations": [{
        "name": "[variables('mastersLbIPConfigName')]",
        "properties": {
          "publicIPAddress": {
            "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('managementPublicIPAddrName'))]"
          }
        }
      }],
      "backendAddressPools": [{
        "name": "[variables('mastersLbBackendPoolName')]"
      }]
    }
  }, {
    "apiVersion": "2015-06-15",
    "type": "Microsoft.Network/loadBalancers/inboundNatRules",
    "name": "[concat(variables('mastersLbName'), '/', 'SSH-', variables('vmNameMaster'), copyIndex())]",
    "location": "[resourceGroup().location]",
    "copy": {
      "name": "lbNatLoopMaster",
      "count": "[variables('masterCount')]"
    },
    "dependsOn": [
      "[concat('Microsoft.Network/loadBalancers/', variables('mastersLbName'))]"
    ],
    "properties": {
      "frontendIPConfiguration": {
        "id": "[variables('mastersLbIPConfigID')]"
      },
      "protocol": "tcp",
      "frontendPort": "[copyIndex(2200)]",
      "backendPort": 22,
      "enableFloatingIP": false
    }
  }, {
    "apiVersion": "2015-06-15",
    "name": "[variables('nodesLbName')]",
    "type": "Microsoft.Network/loadBalancers",
    "location": "[resourceGroup().location]",
    "dependsOn": [
      "[concat('Microsoft.Network/publicIPAddresses/', variables('nodesPublicIPAddrName'))]"
    ],
    "properties": {
      "frontendIPConfigurations": [{
        "name": "LoadBalancerFrontEnd",
        "properties": {
          "publicIPAddress": {
            "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('nodesPublicIPAddrName'))]"
          }
        }
      }],
      "backendAddressPools": [{
        "name": "[variables('nodesLbBackendPoolName')]"
      }]
    }
  }, {
    "apiVersion": "2015-06-15",
    "type": "Microsoft.Network/networkInterfaces",
    "name": "[concat(variables('vmNameNode'),copyIndex(), '-nic')]",
    "location": "[resourceGroup().location]",
    "copy": {
      "name": "nicLoopNode",
      "count": "[parameters('nodeCount')]"
    },
    "dependsOn": [
      "[concat('Microsoft.Network/loadBalancers/', variables('nodesLbName'))]",
      "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
    ],
    "properties": {
      "ipConfigurations": [{
        "name": "ipConfigNode",
        "properties": {
          "privateIPAllocationMethod": "Dynamic",
          "subnet": {
            "id": "[variables('subnetRefNodes')]"
          },
          "loadBalancerBackendAddressPools": [{
            "id": "[concat(variables('nodesLbID'), '/backendAddressPools/', variables('nodesLbBackendPoolName'))]"
          }]
        }
      }]
    }
  }, {
    "apiVersion": "2015-06-15",
    "type": "Microsoft.Compute/virtualMachines",
    "name": "[concat(variables('vmNameMaster'), copyIndex())]",
    "location": "[resourceGroup().location]",
    "copy": {
      "name": "vmLoopMaster",
      "count": "[variables('masterCount')]"
    },
    "dependsOn": [
      "[concat('Microsoft.Storage/storageAccounts/', variables('newStorageAccountName'))]",
      "[concat('Microsoft.Network/networkInterfaces/', variables('vmNameMaster'), copyIndex(), '-nic')]",
      "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetMasters'))]"
    ],
    "properties": {
      "availabilitySet": {
        "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetMasters'))]"
      },
      "hardwareProfile": {
        "vmSize": "[variables('vmSizeMaster')]"
      },
      "osProfile": {
        "computerName": "[concat(variables('vmNameMaster'), copyIndex())]",
        "adminUsername": "[variables('adminUsername')]",
        "linuxConfiguration": {
          "disablePasswordAuthentication": "true",
          "ssh": {
            "publicKeys": [{
              "path": "[variables('sshKeyPath')]",
              "keyData": "[parameters('sshPublicKey')]"
            }]
          }
        }
      },
      "storageProfile": {
        "imageReference": {
          "publisher": "[variables('osImagePublisher')]",
          "offer": "[variables('osImageOffer')]",
          "sku": "[variables('osImageSKU')]",
          "version": "[variables('osImageVersion')]"
        },
        "osDisk": {
          "name": "[concat(variables('vmNameMaster'), copyIndex(),'-osdisk')]",
          "vhd": {
            "uri": "[concat('http://', variables('newStorageAccountName'), '.blob.core.windows.net/', variables('vhdBlobContainer'), '/master-', copyIndex(), '-osdisk.vhd')]"
          },
          "caching": "ReadWrite",
          "createOption": "FromImage"
        }
      },
      "networkProfile": {
        "networkInterfaces": [{
          "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('vmNameMaster'), copyIndex(), '-nic'))]"
        }]
      }
    }
  }, {
    "apiVersion": "2015-06-15",
    "type": "Microsoft.Compute/virtualMachines",
    "name": "[concat(variables('vmNameNode'), copyIndex())]",
    "location": "[resourceGroup().location]",
    "copy": {
      "name": "vmLoopNode",
      "count": "[parameters('nodeCount')]"
    },
    "dependsOn": [
      "[concat('Microsoft.Storage/storageAccounts/', variables('newStorageAccountName'))]",
      "[concat('Microsoft.Network/networkInterfaces/', variables('vmNameNode'), copyIndex(), '-nic')]"
    ],
    "properties": {
      "availabilitySet": {
        "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetNodes'))]"
      },
      "hardwareProfile": {
        "vmSize": "[variables('vmSizeNode')]"
      },
      "osProfile": {
        "computerName": "[concat(variables('vmNameNode'), copyIndex())]",
        "adminUsername": "[variables('adminUsername')]",
        "linuxConfiguration": {
          "disablePasswordAuthentication": "true",
          "ssh": {
            "publicKeys": [{
              "path": "[variables('sshKeyPath')]",
              "keyData": "[parameters('sshPublicKey')]"
            }]
          }
        }
      },
      "storageProfile": {
        "imageReference": {
          "publisher": "[variables('osImagePublisher')]",
          "offer": "[variables('osImageOffer')]",
          "sku": "[variables('osImageSKU')]",
          "version": "[variables('osImageVersion')]"
        },
        "osDisk": {
          "name": "[concat(variables('vmNameNode'), copyIndex(),'-osdisk')]",
          "vhd": {
            "uri": "[concat('http://', variables('newStorageAccountName'), '.blob.core.windows.net/', variables('vhdBlobContainer'), '/node-', copyIndex(), '-osdisk.vhd')]"
          },
          "caching": "ReadWrite",
          "createOption": "FromImage"
        }
      },
      "networkProfile": {
        "networkInterfaces": [{
          "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('vmNameNode'), copyindex(), '-nic'))]"
        }]
      }
    }
  }, {
    "type": "Microsoft.Compute/virtualMachines/extensions",
    "name": "[concat(variables('vmNameMaster'), copyIndex(), '/DockerExtension')]",
    "apiVersion": "2015-06-15",
    "location": "[resourceGroup().location]",
    "copy": {
      "name": "extensionLoopMaster",
      "count": "[variables('masterCount')]"
    },
    "dependsOn": [
      "[concat('Microsoft.Compute/virtualMachines/', variables('vmNameMaster'), copyIndex())]"
    ],
    "properties": {
      "publisher": "Microsoft.Azure.Extensions",
      "type": "DockerExtension",
      "typeHandlerVersion": "1.0",
      "autoUpgradeMinorVersion": true,
      "settings": {
        "compose": {
          "consul": {
            "image": "progrium/consul",
            "command": "[concat('-server -node master', copyIndex(), ' ', variables('consulServerArgs')[copyIndex()])]",
            "ports": [
              "8500:8500",
              "8300:8300",
              "8301:8301",
              "8301:8301/udp",
              "8302:8302",
              "8302:8302/udp",
              "8400:8400"
            ],
            "volumes": [
              "/data/consul:/data"
            ],
            "restart": "always"
          },
          "swarm": {
            "image": "swarm",
            "command": "[concat('manage --replication --advertise ', reference(concat(variables('vmNameMaster'),'0-nic')).ipConfigurations[0].properties.privateIPAddress, ':2375 consul://', reference(concat(variables('vmNameMaster'), '0-nic')).ipConfigurations[0].properties.privateIPAddress, ':8500/nodes')]",
            "ports": [
              "2375:2375"
            ],
            "links": [
              "consul"
            ],
            "volumes": [
              "/etc/docker:/etc/docker"
            ],
            "restart": "always"
          }
        }
      }
    }
  }, {
    "type": "Microsoft.Compute/virtualMachines/extensions",
    "name": "[concat(variables('vmNameNode'), copyIndex(), '/DockerExtension')]",
    "apiVersion": "2015-06-15",
    "location": "[resourceGroup().location]",
    "copy": {
      "name": "extensionLoopNode",
      "count": "[parameters('nodeCount')]"
    },
    "dependsOn": [
      "[concat('Microsoft.Compute/virtualMachines/', variables('vmNameNode'), copyIndex())]"
    ],
    "properties": {
      "publisher": "Microsoft.Azure.Extensions",
      "type": "DockerExtension",
      "typeHandlerVersion": "1.0",
      "autoUpgradeMinorVersion": true,
      "settings": {
        "compose": {
          "swarm": {
            "image": "swarm",
            "command": "[concat('join --advertise 10.0.0.', copyIndex(4), ':2375 consul://', reference(concat(variables('vmNameMaster'), '0-nic')).ipConfigurations[0].properties.privateIPAddress, ':8500/nodes')]",
            "restart": "always"
          }
        },
        "docker": {
          "port": "2375",
          "options": [
            "[concat('--cluster-store=consul://', reference(concat(variables('vmNameMaster'), '0-nic')).ipConfigurations[0].properties.privateIPAddress, ':8500')]",
            "[concat('--cluster-advertise=10.0.0.', copyIndex(4) ,':2375')]"
          ]
        }
      }
    }
  }],
  "outputs": {
    "sshTunnelCmd": {
      "type": "string",
      "value": "[concat('ssh -L 2375:', reference(concat(variables('vmNameMaster'), '0-nic')).ipConfigurations[0].properties.privateIPAddress, ':2375 -N ', variables('adminUsername'), '@', reference(variables('managementPublicIPAddrName')).dnsSettings.fqdn, ' -p 2200')]"
    },
    "dockerCmd": {
      "type": "string",
      "value": "docker -H tcp://localhost:2375 info"
    },
    "swarmNodesLoadBalancerAddress": {
      "type": "string",
      "value": "[reference(variables('nodesPublicIPAddrName')).dnsSettings.fqdn]"
    },
    "sshMaster0": {
      "type": "string",
      "value": "[concat('ssh ', variables('adminUsername'), '@', reference(variables('managementPublicIPAddrName')).dnsSettings.fqdn, ' -A -p 2200')]"
    }
  }
}
